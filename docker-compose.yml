services:

  # --------------------------
  # PHP App
  # --------------------------
  app:
    depends_on:
      - mysql
      - memcached
      - mailhog
      - redis
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: app_container
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./:/var/www/html
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./logs/app:/var/log/app
      - ./logs/xdebug:/tmp/xdebug
    networks:
      - project_network
    environment:
      APP_ENV: ${APP_ENV:-local}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-framework}
      DB_USERNAME: ${DB_USER:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      MAIL_HOST: mailhog
      MAIL_PORT: ${MAIL_PORT:-1025}
      CACHE_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT:-6379}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_BUCKET: ${AWS_BUCKET:-my-bucket}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-http://localstack:4566}

  # --------------------------
  # MySQL Database
  # --------------------------
  mysql:
    image: mysql:8
    container_name: ${DB_HOST:-mysql}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-admin}
      MYSQL_DATABASE: ${DB_DATABASE:-framework}
      MYSQL_USER: ${DB_USER:-admin}
      MYSQL_PASSWORD: ${DB_PASSWORD:-admin}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - project_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --------------------------
  # phpMyAdmin
  # --------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PMA_CONTAINER_NAME:-phpmyadmin_container}
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${DB_PORT:-3306}
      PMA_USER: ${DB_USER:-admin}
      PMA_PASSWORD: ${DB_PASSWORD:-admin}
    ports:
      - "${PMA_PORT:-8080}:80"
    networks:
      - project_network

  # --------------------------
  # Memcached
  # --------------------------
  memcached:
    image: memcached:alpine
    container_name: ${MEMCACHE_SERVER_NAME:-memcached_container}
    restart: unless-stopped
    ports:
      - "${MEMCACHE_PORT:-11211}:11211"
    networks:
      - project_network

  # --------------------------
  # Mailhog
  # --------------------------
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - project_network

  # --------------------------
  # Redis
  # --------------------------
  redis:
    image: redis:alpine
    container_name: ${REDIS_SERVER_NAME:-redis_container}
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - project_network

  # --------------------------
  # Cron Container
  # --------------------------
  cron:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cron_container
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./run_cron.sh:/usr/local/bin/run_cron.sh
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./logs/cron:/var/log/cron
      - ./logs/xdebug:/tmp/xdebug
    networks:
      - project_network
    command: >
      sh -c "mkdir -p /var/log/cron \
      && touch /var/log/cron/cron.log \
      && chmod +x /usr/local/bin/run_cron.sh \
      && echo '* * * * * root /usr/local/bin/run_cron.sh' > /etc/cron.d/app-cron \
      && echo '0 * * * * root truncate -s 0 /var/log/cron/cron.log' >> /etc/cron.d/app-cron \
      && chmod 0644 /etc/cron.d/app-cron \
      && cron -f"

  # --------------------------
  # LocalStack (AWS services)
  # --------------------------
  localstack:
    image: localstack/localstack:latest
    container_name: localstack_container
    restart: unless-stopped
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3,sqs,sns,lambda,dynamodb
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-test}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-test}
    volumes:
      - "./logs/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - project_network

# --------------------------
# Networks
# --------------------------
networks:
  project_network:
    driver: bridge

# --------------------------
# Volumes
# --------------------------
volumes:
  mysql_data:
